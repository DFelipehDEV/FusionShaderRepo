// CS_Sharpen

//@Begin_vertex
#ifdef GL_ES
 precision mediump float;
#endif
uniform mat4 transformMatrix;
uniform mat4 projectionMatrix;

attribute vec4 position;
attribute vec2 texCoord;
varying vec2 textureCoordinate;

void main(void)
{
	textureCoordinate = texCoord;
	gl_Position = projectionMatrix * transformMatrix * position;
}
//@End
//@Begin_fragment
#ifdef GL_ES
 precision mediump float;
#endif
varying vec2 textureCoordinate;

uniform float fXc;
uniform float fYc;

uniform sampler2D imgTexture;
uniform lowp vec4 blendColor;

void main(void)
{
	vec4 color;

	vec4 TexT = texture2D(imgTexture, vec2(textureCoordinate.x,textureCoordinate.y-fYc));
	vec4 TexTL = texture2D(imgTexture, vec2(textureCoordinate.x-fXc,textureCoordinate.y-fYc));
	vec4 TexL = texture2D(imgTexture, vec2(textureCoordinate.x-fXc,textureCoordinate.y));
	vec4 TexBL = texture2D(imgTexture, vec2(textureCoordinate.x-fXc,textureCoordinate.y+fYc));
	vec4 TexB = texture2D(imgTexture, vec2(textureCoordinate.x,textureCoordinate.y+fYc));
	vec4 TexBR = texture2D(imgTexture, vec2(textureCoordinate.x+fXc,textureCoordinate.y+fYc));
	vec4 TexR = texture2D(imgTexture, vec2(textureCoordinate.x+fXc,textureCoordinate.y));
	vec4 TexTR = texture2D(imgTexture, vec2(textureCoordinate.x+fXc,textureCoordinate.y-fYc));

	color = texture2D(imgTexture, textureCoordinate);
	color = (color+TexT+TexTL+TexL+TexBL+TexB+TexBR+TexR+TexTR)/9.0;

	color *= blendColor;

	gl_FragColor = color;
}
//@End
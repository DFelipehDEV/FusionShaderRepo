// CS_ColorizeBlue

//@Begin_vertex
//version_####
#ifdef GL_ES
 precision mediump float;
#endif
in vec2 position;

uniform mat3 projectionMatrix;
uniform mat3 transformMatrix;
uniform mat3 objectMatrix;
uniform mat3 textureMatrix;

out vec2 textureCoordinate;

void main()
{
    vec3 pos = vec3(position, 1.0);
    textureCoordinate = (textureMatrix * pos).xy;
    gl_Position = vec4(projectionMatrix * transformMatrix * objectMatrix * pos, 1.0);
}
//@End
//@Begin_fragment
//version_####
#ifdef GL_ES
 precision mediump float;
#endif
in vec2 textureCoordinate;


//Tint color
uniform vec4 fTint;
uniform float fCoeff;


uniform sampler2D imgTexture;

uniform lowp vec4 blendColor;

out vec4 fragColor;

void main(void)
{
	vec4 color = texture(imgTexture, textureCoordinate);
	if(color.b>0.0 &&
		color.r<fCoeff &&
		color.g<fCoeff)
	{
		color.rgb = color.b*fTint.rgb;
	}

	color *= blendColor;


	fragColor = color; //gl_FragColor
}
//@End
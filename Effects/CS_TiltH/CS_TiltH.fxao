// CS_TiltH

//@Begin_vertex
#ifdef GL_ES
 precision mediump float;
#endif
uniform mat4 transformMatrix;
uniform mat4 projectionMatrix;

attribute vec4 position;
attribute vec2 texCoord;
varying vec2 textureCoordinate;

void main(void)
{
	textureCoordinate = texCoord;
	gl_Position = projectionMatrix * transformMatrix * position;
}
//@End
//@Begin_fragment
#ifdef GL_ES
 precision mediump float;
#endif
varying vec2 textureCoordinate;

uniform float fT;

uniform sampler2D imgTexture;
uniform lowp vec4 blendColor;

void main(void)
{
	vec4 color;
	float fCoeff = 1.0-abs(fT);

	if(fT>=0.0)
	{
		color = texture2D(imgTexture, vec2((textureCoordinate.x-textureCoordinate.y*fT)/fCoeff,textureCoordinate.y));
	}
	else
	{
		color = texture2D(imgTexture, vec2((textureCoordinate.x-textureCoordinate.y*fT+fT)/fCoeff,textureCoordinate.y));
	}
	color *= blendColor;

	gl_FragColor = color;
}
//@End
// Squeeze

//@Begin_vertex
#ifdef GL_ES
 precision mediump float;
#endif
uniform mat4 transformMatrix;
uniform mat4 projectionMatrix;

attribute vec4 position;
attribute vec2 texCoord;
varying vec2 textureCoordinate;

void main(void)
{
	textureCoordinate = texCoord;
	gl_Position = projectionMatrix * transformMatrix * position;
}
//@End
//@Begin_fragment
#ifdef GL_ES
 precision mediump float;
#endif
varying vec2 textureCoordinate;

uniform float fCoeff;
uniform float fAngle;

uniform sampler2D imgTexture;

uniform lowp vec4 blendColor;
uniform float fPixelWidth;
uniform float fPixelHeight;

void main(void)
{
	vec2 inTexture = textureCoordinate;
	float Dist = distance(textureCoordinate, vec2(0.5,0.5)) * 2.0;
	if (Dist < 1.0){
		float Angle = atan(textureCoordinate.y - 0.5, textureCoordinate.x - 0.5) + pow(1.0 - Dist,2.0) * fAngle;
		Dist = (pow(Dist,fCoeff)) / 2.0;
		inTexture.x = cos(Angle) * Dist + 0.5;
		inTexture.y = sin(Angle) * Dist + 0.5;
	}
   	vec4 color = texture2D(imgTexture,inTexture);

    color *= blendColor;
    gl_FragColor = color;
}
//@End

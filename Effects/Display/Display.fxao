// Display

//@Begin_vertex
#ifdef GL_ES
 precision mediump float;
#endif
uniform mat4 transformMatrix;
uniform mat4 projectionMatrix;

attribute vec4 position;
attribute vec2 texCoord;
varying vec2 textureCoordinate;

void main(void)
{
	textureCoordinate = texCoord;
	gl_Position = projectionMatrix * transformMatrix * position;
}
//@End
//@Begin_fragment
#ifdef GL_ES
 precision mediump float;
#endif
varying vec2 textureCoordinate;

uniform float fPeriods;
uniform float fOffset;
uniform float fAmplitude;

uniform sampler2D imgTexture;
uniform lowp vec4 blendColor;
uniform float fPixelWidth;
uniform float fPixelHeight;

void main(void)
{
	vec4 color = texture2D(imgTexture, textureCoordinate);
    color.rgb +=  vec3(sin((textureCoordinate.y*fPeriods/fPixelHeight-fOffset)*fPixelHeight)*fAmplitude);;

	color *= blendColor;

	gl_FragColor = color;
}
//@End
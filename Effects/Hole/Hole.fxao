// Hole

//@Begin_vertex
#ifdef GL_ES
 precision mediump float;
#endif
uniform mat4 transformMatrix;
uniform mat4 projectionMatrix;

attribute vec4 position;
attribute vec2 texCoord;
varying vec2 textureCoordinate;

void main(void)
{
	textureCoordinate = texCoord;
	gl_Position = projectionMatrix * transformMatrix * position;
}
//@End
//@Begin_fragment
#ifdef GL_ES
 precision mediump float;
#endif
varying vec2 textureCoordinate;

uniform float fD;
uniform float fE;
uniform float fX;
uniform float fY;
uniform float fC;
uniform float fRatio;
uniform int iInvert;
uniform int iH;
uniform int iV;

uniform sampler2D imgTexture;
uniform lowp vec4 blendColor;
uniform float fPixelWidth;
uniform float fPixelHeight;

void main(void)
{

	vec4 color = texture2D(imgTexture, textureCoordinate);
    if(iH==0 || (iH==1 && textureCoordinate.x >fX) || (iH==2 && textureCoordinate.x <fX) ) {
    	if(iV==0 || (iV==1 && textureCoordinate.y >fY) || (iV==2 && textureCoordinate.y <fY) ) {
		    float a = pow(max(0.0,min(1.0,sqrt(pow(textureCoordinate.y-fY,2.0)/fRatio+pow(textureCoordinate.x-fX,2.0)*fRatio)/fD)),fE)*fC;
		    if(iInvert==1)
				color.a *= (1.0-a);
		    else
				color.a *= a;
		  }
    }

	color *= blendColor;

	gl_FragColor = color;
}
//@End
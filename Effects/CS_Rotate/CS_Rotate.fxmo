// CS_Rotate

//@Begin_vertex
//version_####
#ifdef GL_ES
 precision mediump float;
#endif
in vec2 position;

uniform mat3 projectionMatrix;
uniform mat3 transformMatrix;
uniform mat3 objectMatrix;
uniform mat3 textureMatrix;

out vec2 textureCoordinate;

void main()
{
    vec3 pos = vec3(position, 1.0);
    textureCoordinate = (textureMatrix * pos).xy;
    gl_Position = vec4(projectionMatrix * transformMatrix * objectMatrix * pos, 1.0);
}
//@End
//@Begin_fragment
//version_####
#ifdef GL_ES
 precision mediump float;
#endif
in vec2 textureCoordinate;


uniform float fAngle;
uniform float fX;
uniform float fY;

uniform sampler2D imgTexture;

uniform lowp vec4 blendColor;

out vec4 fragColor;

void main(void)
{
	float vAngle = fAngle * 0.0174532925; //To radians

	float Ray = sqrt(pow(textureCoordinate.x-fX,2.0)+pow(textureCoordinate.y-fY,2.0));
	float Angle;

	if(textureCoordinate.y-fY>0.0)
	{
		Angle = acos((textureCoordinate.x-fX)/Ray);
	}
	else
	{
		Angle = 0.0-acos((textureCoordinate.x-fX)/Ray);
	}

	vec2 tmpTex = textureCoordinate;
    tmpTex.x = fX + cos(Angle+vAngle)*Ray;
    tmpTex.y = fY + sin(Angle+vAngle)*Ray;
   	vec4 color = texture(imgTexture, tmpTex);

	color *= blendColor;


	fragColor = color; //gl_FragColor
}
//@End
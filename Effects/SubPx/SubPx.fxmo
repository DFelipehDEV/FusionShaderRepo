// SubPx

//@Begin_vertex
//version_####
#ifdef GL_ES
 precision mediump float;
#endif
in vec2 position;

uniform mat3 projectionMatrix;
uniform mat3 transformMatrix;
uniform mat3 objectMatrix;
uniform mat3 textureMatrix;

out vec2 textureCoordinate;

void main()
{
    vec3 pos = vec3(position, 1.0);
    textureCoordinate = (textureMatrix * pos).xy;
    gl_Position = vec4(projectionMatrix * transformMatrix * objectMatrix * pos, 1.0);
}
//@End
//@Begin_fragment
//version_####
#ifdef GL_ES
 precision mediump float;
#endif
in vec2 textureCoordinate;

uniform float x;
uniform float y;
uniform int limit;

uniform sampler2D imgTexture;
uniform sampler2D Overlay;

uniform lowp vec4 blendColor;
uniform float fPixelWidth;
uniform float fPixelHeight;

out vec4 fragColor;

void main(void)
{
	vec4 color = vec4(0.0, 0.0, 0.0, 0.0);
	vec2 pos = vec2(x/fPixelWidth,y/fPixelHeight);

	pos = textureCoordinate - pos;
	if(limit == 1)
		pos -= floor(pos);

	if(pos.x >= 0.0 && pos.x <= 1.0 && pos.y >= 0.0 && pos.y <= 1.0)
		color = texture(imgTexture, pos);

   outcolor *= blendColor;

   fragColor = outcolor; //fragColor = outcolor;
}
//@End
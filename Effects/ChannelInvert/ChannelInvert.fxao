// ChannelInvert

//@Begin_vertex
#ifdef GL_ES
 precision mediump float;
#endif
uniform mat4 transformMatrix;
uniform mat4 projectionMatrix;

attribute vec4 position;
attribute vec2 texCoord;
varying vec2 textureCoordinate;

void main(void)
{
	textureCoordinate = texCoord;
	gl_Position = projectionMatrix * transformMatrix * position;
}
//@End
//@Begin_fragment
#ifdef GL_ES
 precision mediump float;
#endif
varying vec2 textureCoordinate;

uniform int iR;
uniform int iG;
uniform int iB;
uniform int iA;

uniform sampler2D imgTexture;
uniform lowp vec4 blendColor;

void main(void)
{
	vec4 color = texture2D(imgTexture, textureCoordinate);
	if(iR==1)
		color.r = 1.0-color.r;
	if(iG==1)
		color.g = 1.0-color.g;
	if(iB==1)
		color.b = 1.0-color.b;
	if(iA==1)
		color.a = 1.0-color.a;

	color *= blendColor;

	gl_FragColor = color;
}
//@End
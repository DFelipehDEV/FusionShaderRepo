// nbColorBurn

//@Begin_vertex
#ifdef GL_ES
 precision mediump float;
#endif
uniform mat4 transformMatrix;
uniform mat4 projectionMatrix;

attribute vec4 position;
attribute vec2 texCoord;
varying vec2 textureCoordinate;

void main(void)
{
	textureCoordinate = texCoord;
	gl_Position = projectionMatrix * transformMatrix * position;
}
//@End
//@Begin_fragment
#ifdef GL_ES
 precision mediump float;
#endif
varying vec2 textureCoordinate;

uniform sampler2D imgTexture;

uniform vec4 color;
uniform lowp vec4 blendColor;

#define BlendColorBurnf(base, blend) 	((blend == vec4(0.0)) ? blend : max((vec4(1.0) - ((vec4(1.0) - base) / blend)), vec4(0.0)))

void main(void)
{
	vec4 bcolor = texture2D(imgTexture, textureCoordinate);
	vec4 fcolor = BlendColorBurnf(bcolor,color);
	fcolor.a = bcolor.a;

	fcolor *= blendColor;

	gl_FragColor = fcolor;
}
//@End
// CS_ColorizePartsRGBYCM

//@Begin_vertex
//version_####
#ifdef GL_ES
 precision mediump float;
#endif
in vec2 position;

uniform mat3 projectionMatrix;
uniform mat3 transformMatrix;
uniform mat3 objectMatrix;
uniform mat3 textureMatrix;

out vec2 textureCoordinate;

void main()
{
    vec3 pos = vec3(position, 1.0);
    textureCoordinate = (textureMatrix * pos).xy;
    gl_Position = vec4(projectionMatrix * transformMatrix * objectMatrix * pos, 1.0);
}
//@End
//@Begin_fragment
//version_####
#ifdef GL_ES
 precision mediump float;
#endif
in vec2 textureCoordinate;


//Tint color
uniform vec4 fR;
uniform vec4 fG;
uniform vec4 fB;
uniform vec4 fY;
uniform vec4 fC;
uniform vec4 fP;
uniform float fCoeff;


uniform sampler2D imgTexture;

uniform lowp vec4 blendColor;

out vec4 fragColor;

void main(void)
{
	vec4 color = texture(imgTexture, textureCoordinate);
	//Red
	if((fR.r>0.0 || fR.g>0.0 || fR.b>0.0) &&
		color.r>0.0 && color.g<fCoeff && color.b<fCoeff)
	{
		color.rgb = color.r*fR.rgb;
	}
	//Green
	else if((fG.r>0.0 || fG.g>0.0 || fG.b>0.0) &&
		color.g>0.0 &&	color.r<fCoeff && color.b<fCoeff)
	{
		color.rgb = color.g*fG.rgb;
	}
	//Blue
	else if((fB.r>0.0 || fB.g>0.0 || fB.b>0.0) &&
		color.b>0.0 &&	color.r<fCoeff && color.g<fCoeff)
	{
		color.rgb = color.b*fB.rgb;
	}
		/*
	//Yellow
	else if((fY.r>0.0 || fY.g>0.0 || fY.b>0.0) && 
		color.r>color.g-fCoeff && color.r<color.g+fCoeff &&	color.b<fCoeff)
	{
		color.rgb = color.r*fY.rgb;
	}
	//Cyan
	else if((fC.r>0.0 || fC.g>0.0 || fC.b>0.0) && 
		color.g>color.b-fCoeff && color.g<color.b+fCoeff &&	color.r<fCoeff)
	{
		color.rgb = color.g*fC.rgb;
	}
	//Purple
	else if((fP.r>0.0 || fP.g>0.0 || fP.b>0.0) && 
		color.r>color.b-fCoeff && color.r<color.b+fCoeff && color.g<fCoeff)
	{
		color.rgb = color.r*fP.rgb;
	}*/
	color *= blendColor;


	fragColor = color; //gl_FragColor
}
//@End
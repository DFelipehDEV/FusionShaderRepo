// CS_Sharpen

//@Begin_vertex
//version_####
#ifdef GL_ES
 precision mediump float;
#endif
in vec2 position;

uniform mat3 projectionMatrix;
uniform mat3 transformMatrix;
uniform mat3 objectMatrix;
uniform mat3 textureMatrix;

out vec2 textureCoordinate;

void main()
{
    vec3 pos = vec3(position, 1.0);
    textureCoordinate = (textureMatrix * pos).xy;
    gl_Position = vec4(projectionMatrix * transformMatrix * objectMatrix * pos, 1.0);
}
//@End
//@Begin_fragment
//version_####
#ifdef GL_ES
 precision mediump float;
#endif
in vec2 textureCoordinate;


uniform float fXc;
uniform float fYc;

uniform sampler2D imgTexture;

uniform lowp vec4 blendColor;

out vec4 fragColor;

void main(void)
{
	vec4 color;

	vec4 TexT = texture(imgTexture, vec2(textureCoordinate.x,textureCoordinate.y-fYc));
	vec4 TexTL = texture(imgTexture, vec2(textureCoordinate.x-fXc,textureCoordinate.y-fYc));
	vec4 TexL = texture(imgTexture, vec2(textureCoordinate.x-fXc,textureCoordinate.y));
	vec4 TexBL = texture(imgTexture, vec2(textureCoordinate.x-fXc,textureCoordinate.y+fYc));
	vec4 TexB = texture(imgTexture, vec2(textureCoordinate.x,textureCoordinate.y+fYc));
	vec4 TexBR = texture(imgTexture, vec2(textureCoordinate.x+fXc,textureCoordinate.y+fYc));
	vec4 TexR = texture(imgTexture, vec2(textureCoordinate.x+fXc,textureCoordinate.y));
	vec4 TexTR = texture(imgTexture, vec2(textureCoordinate.x+fXc,textureCoordinate.y-fYc));

	color = texture(imgTexture, textureCoordinate);
	color = (color+TexT+TexTL+TexL+TexBL+TexB+TexBR+TexR+TexTR)/9.0;

	color *= blendColor;


	fragColor = color; //gl_FragColor
}
//@End
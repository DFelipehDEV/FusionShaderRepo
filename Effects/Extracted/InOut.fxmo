// InOut

//@Begin_vertex
//version_####
#ifdef GL_ES
 precision mediump float;
#endif
in vec2 position;

uniform mat3 projectionMatrix;
uniform mat3 transformMatrix;
uniform mat3 objectMatrix;
uniform mat3 textureMatrix;

out vec2 textureCoordinate;

void main()
{
    vec3 pos = vec3(position, 1.0);
    textureCoordinate = (textureMatrix * pos).xy;
    gl_Position = vec4(projectionMatrix * transformMatrix * objectMatrix * pos, 1.0);
}
//@End
//@Begin_fragment
//version_####
#ifdef GL_ES
 precision mediump float;
#endif
in vec2 textureCoordinate;


uniform int iR;
uniform int iG;
uniform int iB;
uniform int iA;
uniform float iFr;
uniform float iFg;
uniform float iFb;
uniform float iFa;

uniform sampler2D imgTexture;

uniform vec4 blendColor;

out vec4 fragColor;

void main(void)
{
	float channels[4];
	vec4 color = texture(imgTexture, textureCoordinate);

    channels[0] = color.r;
    channels[1] = color.g;
    channels[2] = color.b;
    channels[3] = color.a;

    color.r = color.r+(channels[iR]-color.r)*iFr;
    color.g = color.g+(channels[iG]-color.g)*iFg;
    color.b = color.b+(channels[iB]-color.b)*iFb;
    color.a = color.a+(channels[iA]-color.a)*iFa;

	color *= blendColor;


	fragColor = color; //gl_FragColor
}
//@End
// CS_UnderWater

//@Begin_vertex
#ifdef GL_ES
 precision mediump float;
#endif
uniform mat4 transformMatrix;
uniform mat4 projectionMatrix;

attribute vec4 position;
attribute vec2 texCoord;
varying vec2 textureCoordinate;

void main(void)
{
	textureCoordinate = texCoord;
	gl_Position = projectionMatrix * transformMatrix * position;
}
//@End
//@Begin_fragment
#ifdef GL_ES
 precision mediump float;
#endif
varying vec2 textureCoordinate;

uniform float fBlur;
uniform float fAmplitudeX;
uniform float fPeriodsX;
uniform float fFreqX;
uniform float fAmplitudeY;
uniform float fPeriodsY;
uniform float fFreqY;

uniform sampler2D imgTexture;
uniform lowp vec4 blendColor;

void main(void)
{
	//SinX
	vec2 texCoordinate = textureCoordinate;
	texCoordinate.y = textureCoordinate.y + (sin((textureCoordinate.x+fFreqX)*fPeriodsX)*fAmplitudeX);
	//SinY
	texCoordinate.x = textureCoordinate.x + (sin((textureCoordinate.y+fFreqY)*fPeriodsY)*fAmplitudeY);

	vec4 TexTL = texture2D(imgTexture, vec2(texCoordinate.x-fBlur,texCoordinate.y-fBlur));
	vec4 TexBL = texture2D(imgTexture, vec2(texCoordinate.x-fBlur,texCoordinate.y+fBlur));
	vec4 TexBR = texture2D(imgTexture, vec2(texCoordinate.x+fBlur,texCoordinate.y+fBlur));
	vec4 TexTR = texture2D(imgTexture, vec2(texCoordinate.x+fBlur,texCoordinate.y-fBlur));
	vec4 color = texture2D(imgTexture, texCoordinate);
	color = (color+TexTL+TexBL+TexBR+TexTR)/5.0;

	color *= blendColor;

	gl_FragColor = color;

}
//@End
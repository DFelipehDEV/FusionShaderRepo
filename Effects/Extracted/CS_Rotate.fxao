// CS_Rotate

//@Begin_vertex
#ifdef GL_ES
 precision mediump float;
#endif
uniform mat4 transformMatrix;
uniform mat4 projectionMatrix;

attribute vec4 position;
attribute vec2 texCoord;
varying vec2 textureCoordinate;

void main(void)
{
	textureCoordinate = texCoord;
	gl_Position = projectionMatrix * transformMatrix * position;
}
//@End
//@Begin_fragment
#ifdef GL_ES
 precision mediump float;
#endif
varying vec2 textureCoordinate;

uniform float fAngle;
uniform float fX;
uniform float fY;

uniform sampler2D imgTexture;
uniform lowp vec4 blendColor;

void main(void)
{
	float vAngle = fAngle * 0.0174532925; //To radians

	float Ray = sqrt(pow(textureCoordinate.x-fX,2.0)+pow(textureCoordinate.y-fY,2.0));
	float Angle;

	if(textureCoordinate.y-fY>0.0)
	{
		Angle = acos((textureCoordinate.x-fX)/Ray);
	}
	else
	{
		Angle = 0.0-acos((textureCoordinate.x-fX)/Ray);
	}

	vec2 tmpTex = textureCoordinate;
    tmpTex.x = fX + cos(Angle+vAngle)*Ray;
    tmpTex.y = fY + sin(Angle+vAngle)*Ray;
   	vec4 color = texture2D(imgTexture, tmpTex);

	color *= blendColor;

	gl_FragColor = color;
}
//@End
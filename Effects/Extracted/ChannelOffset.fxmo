// ChannelOffset

//@Begin_vertex
//version_####
#ifdef GL_ES
 precision mediump float;
#endif
in vec2 position;

uniform mat3 projectionMatrix;
uniform mat3 transformMatrix;
uniform mat3 objectMatrix;
uniform mat3 textureMatrix;

out vec2 textureCoordinate;

void main()
{
    vec3 pos = vec3(position, 1.0);
    textureCoordinate = (textureMatrix * pos).xy;
    gl_Position = vec4(projectionMatrix * transformMatrix * objectMatrix * pos, 1.0);
}
//@End
//@Begin_fragment
//version_####
#ifdef GL_ES
 precision mediump float;
#endif
in vec2 textureCoordinate;

uniform float Rx;
uniform float Ry;
uniform float Gx;
uniform float Gy;
uniform float Bx;
uniform float By;
uniform float Ax;
uniform float Ay;

uniform sampler2D imgTexture;
uniform lowp vec4 blendColor;

out vec4 fragColor;

vec4 texClip(sampler2D img, vec2 pos)
{
	return (pos.x < 0.0 || pos.y < 0.0 || pos.x > 1.0 || pos.y > 1.0) ? vec4(0.0) : texture(img,pos);
}

void main(void)
{

	vec4 color = texture(imgTexture, textureCoordinate);

	color.r = texClip(texture, textureCoordinate+vec2(Rx,Ry)).r;
	color.g = texClip(texture, textureCoordinate+vec2(Gx,Gy)).g;
	color.b = texClip(texture, textureCoordinate+vec2(Bx,By)).b;
	color.a = texClip(texture, textureCoordinate+vec2(Ax,Ay)).a;

   color *= blendColor;


	fragColor = color; //gl_FragColor
}
//@End
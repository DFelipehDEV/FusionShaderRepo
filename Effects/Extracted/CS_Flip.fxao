// CS_Flip

//@Begin_vertex
#ifdef GL_ES
 precision mediump float;
#endif
uniform mat4 transformMatrix;
uniform mat4 projectionMatrix;

attribute vec4 position;
attribute vec2 texCoord;
varying vec2 textureCoordinate;

void main(void)
{
	textureCoordinate = texCoord;
	gl_Position = projectionMatrix * transformMatrix * position;
}
//@End
//@Begin_fragment
#ifdef GL_ES
 precision mediump float;
#endif
varying vec2 textureCoordinate;

uniform int iFlipX;
uniform int iFlipY;

uniform sampler2D imgTexture;
uniform lowp vec4 blendColor;

void main(void)
{
	vec4 color = texture2D(imgTexture, textureCoordinate);
	if(iFlipX==0 && iFlipY==0)
	{
		color = texture2D(imgTexture, textureCoordinate);
	}
	else if(iFlipX==1 && iFlipY==0)
	{
		color = texture2D(imgTexture, vec2(1.0-textureCoordinate.x, textureCoordinate.y));
	}
	else if(iFlipX==0 && iFlipY==1)
	{
		color = texture2D(imgTexture, vec2(textureCoordinate.x, 1.0-textureCoordinate.y));
	}
	else
	{
		color = texture2D(imgTexture, vec2(1.0-textureCoordinate.x, 1.0-textureCoordinate.y));
	}
	color *= blendColor;

	gl_FragColor = color;
}
//@End
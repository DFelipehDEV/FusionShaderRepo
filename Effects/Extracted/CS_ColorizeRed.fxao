// CS_ColorizeRed

//@Begin_vertex
#ifdef GL_ES
 precision mediump float;
#endif
uniform mat4 transformMatrix;
uniform mat4 projectionMatrix;

attribute vec4 position;
attribute vec2 texCoord;
varying vec2 textureCoordinate;

void main(void)
{
	textureCoordinate = texCoord;
	gl_Position = projectionMatrix * transformMatrix * position;
}
//@End
//@Begin_fragment
#ifdef GL_ES
 precision mediump float;
#endif
varying vec2 textureCoordinate;

//Tint color
uniform vec4 fTint;
uniform float fCoeff;


uniform sampler2D imgTexture;
uniform lowp vec4 blendColor;

void main(void)
{
	vec4 color = texture2D(imgTexture, textureCoordinate);
	if(color.r>0.0 &&
		color.g<fCoeff &&
		color.b<fCoeff)
	{
		color.rgb = color.r*fTint.rgb;
	}

	color *= blendColor;

	gl_FragColor = color;
}
//@End
// CircularMask

//@Begin_vertex
//version_####
#ifdef GL_ES
 precision mediump float;
#endif
in vec2 position;

uniform mat3 projectionMatrix;
uniform mat3 transformMatrix;
uniform mat3 objectMatrix;
uniform mat3 textureMatrix;

out vec2 textureCoordinate;

void main()
{
    vec3 pos = vec3(position, 1.0);
    textureCoordinate = (textureMatrix * pos).xy;
    gl_Position = vec4(projectionMatrix * transformMatrix * objectMatrix * pos, 1.0);
}
//@End
//@Begin_fragment
//version_####
#ifdef GL_ES
 precision mediump float;
#endif
in vec2 textureCoordinate;

uniform float x;
uniform float y;
uniform float r;
uniform int s;
uniform int i;

uniform sampler2D imgTexture;

uniform int inkEffect;
uniform lowp vec4 blendColor;
uniform float fPixelWidth;
uniform float fPixelHeight;

out vec4 fragColor;

void main(void)
{
   vec4 color = texture(imgTexture, textureCoordinate);

   float norm_radius = r/2.0/sqrt(pow(fPixelWidth, 2.0) + pow(fPixelHeight, 2.0));
   float tmp = sqrt(pow(textureCoordinate.x-x/fPixelWidth, 2.0) + pow(textureCoordinate.y-y/fPixelHeight, 2.0))/norm_radius;

   tmp = pow(abs(tmp),float(s));

   if(i == 1)
      color.a *= (1.0-tmp);
   else
      color.a *= tmp;

   color *= blendColor;

  fragColor = color; //gl_FragColor
}
//@End

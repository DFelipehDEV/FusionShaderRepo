// CS_Emboss

//@Begin_vertex
//version_####
#ifdef GL_ES
 precision mediump float;
#else
 precision highp float;
#endif
in vec2 position;

uniform mat3 projectionMatrix;
uniform mat3 transformMatrix;
uniform mat3 objectMatrix;
uniform mat3 textureMatrix;

out vec2 textureCoordinate;

void main()
{
    vec3 pos = vec3(position, 1.0);
    textureCoordinate = (textureMatrix * pos).xy;
    gl_Position = vec4(projectionMatrix * transformMatrix * objectMatrix * pos, 1.0);
}
//@End
//@Begin_fragment
//version_####
#ifdef GL_ES
 precision mediump float;
#endif
in vec2 textureCoordinate;

uniform float fCoeff;

uniform sampler2D imgTexture;

uniform lowp vec4 blendColor;
uniform float fPixelWidth;
uniform float fPixelHeight;

out vec4 fragColor;

void main(void)
{
	vec2 onePixel = vec2(1.0/fPixelWidth, 1.0/fPixelHeight);
	lowp vec4 color = vec4(0.5, 0.5, 0.5, 1.0);
	#ifdef GL_ES
		color.rgb -= texture(imgTexture, textureCoordinate + onePixel).rgb*fCoeff;
		color.rgb += texture(imgTexture, textureCoordinate - onePixel).rgb*fCoeff;
	#else
		color.rgb -= texture(imgTexture, textureCoordinate - onePixel).rgb*fCoeff;
		color.rgb += texture(imgTexture, textureCoordinate + onePixel).rgb*fCoeff;
	#endif
	lowp float w = (color.r+color.g+color.b)/3.0;
	color.rgb = vec3(w, w, w);

	color *= blendColor;

	fragColor = color; //gl_FragColor
}
//@End
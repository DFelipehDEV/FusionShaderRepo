// ChannelBlur

//@Begin_vertex
//version_####
#ifdef GL_ES
    precision mediump float;
#endif
in vec2 position;

uniform mat3 projectionMatrix;
uniform mat3 transformMatrix;
uniform mat3 objectMatrix;
uniform mat3 textureMatrix;

out vec2 textureCoordinate;

void main()
{
    vec3 pos = vec3(position, 1.0);
    textureCoordinate = (textureMatrix * pos).xy;
    gl_Position = vec4(projectionMatrix * transformMatrix * objectMatrix * pos, 1.0);
}
//@End
//@Begin_fragment
//version_####
#ifdef GL_ES
    precision mediump float;
#endif
in vec2 textureCoordinate;


uniform float fCoeff;
uniform int iR;
uniform int iG;
uniform int iB;
uniform int iA;

uniform sampler2D imgTexture;

uniform vec4 blendColor;

out vec4 fragColor;

void main(void)
{
	vec4 TexT = texture(imgTexture, vec2(textureCoordinate.x,textureCoordinate.y-fCoeff));
	vec4 TexTL = texture(imgTexture, vec2(textureCoordinate.x-fCoeff,textureCoordinate.y-fCoeff));
	vec4 TexL = texture(imgTexture, vec2(textureCoordinate.x-fCoeff,textureCoordinate.y));
	vec4 TexBL = texture(imgTexture, vec2(textureCoordinate.x-fCoeff,textureCoordinate.y+fCoeff));
	vec4 TexB = texture(imgTexture, vec2(textureCoordinate.x,textureCoordinate.y+fCoeff));
	vec4 TexBR = texture(imgTexture, vec2(textureCoordinate.x+fCoeff,textureCoordinate.y+fCoeff));
	vec4 TexR = texture(imgTexture, vec2(textureCoordinate.x+fCoeff,textureCoordinate.y));
	vec4 TexTR = texture(imgTexture, vec2(textureCoordinate.x+fCoeff,textureCoordinate.y-fCoeff));

	vec4 color = texture(imgTexture, textureCoordinate);
	if(iR==1)
		color.r = (color.r+TexT.r+TexTL.r+TexL.r+TexBL.r+TexB.r+TexBR.r+TexR.r+TexTR.r)/9.0;
	if(iG==1)
		color.g = (color.g+TexT.g+TexTL.g+TexL.g+TexBL.g+TexB.g+TexBR.g+TexR.g+TexTR.g)/9.0;
	if(iB==1)
		color.b = (color.b+TexT.b+TexTL.b+TexL.b+TexBL.b+TexB.b+TexBR.b+TexR.b+TexTR.b)/9.0;
	if(iA==1)
		color.a = (color.a+TexT.a+TexTL.a+TexL.a+TexBL.a+TexB.a+TexBR.a+TexR.a+TexTR.a)/9.0;

	color *= blendColor;


	fragColor = color; //gl_FragColor
}
//@End
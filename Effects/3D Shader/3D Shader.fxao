// 3DShader

//@Begin_vertex
#ifdef GL_ES
 precision mediump float;
#endif
uniform mat4 transformMatrix;
uniform mat4 projectionMatrix;

attribute vec4 position;
attribute vec2 texCoord;
varying vec2 textureCoordinate;

void main(void)
{
	textureCoordinate = texCoord;
	gl_Position = projectionMatrix * transformMatrix * position;
}
//@End
//@Begin_fragment
#ifdef GL_ES
 precision mediump float;
#endif
varying vec2 textureCoordinate;

uniform float h1;
uniform float h2;
uniform float c1;
uniform float c2;
uniform float t1;
uniform float t2;
uniform float l1;
uniform float l2;

uniform sampler2D imgTexture;

uniform lowp vec4 blendColor;
uniform float fPixelWidth;
uniform float fPixelHeight;

void main(void)
{
    vec4 color = vec4(1.0, 1.0, 1.0, 1.0);
	float ch = (h1 + (h2 - h1) * textureCoordinate.x)/2.0;
	float cc = (c1 + (c2 - c1) * textureCoordinate.x);
	float cl = (l1 + (l2 - l1) * textureCoordinate.x);

	if(textureCoordinate.y < (cc - ch) || textureCoordinate.y > (cc + ch))
	{
		color = vec4(0.0);
	}
	else
	{
		float cy = (textureCoordinate.y - cc + ch)/(ch*2.0);
		float cx = (textureCoordinate.x * (t2 - t1) + t1);
		color = texture2D(imgTexture, vec2(cx,cy));
		color *= vec4(cl,cl,cl,1.0);
	}

	color *= blendColor;

	gl_FragColor = color;
}
//@End
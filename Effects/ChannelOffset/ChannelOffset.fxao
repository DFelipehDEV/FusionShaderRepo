// ChannelOffset

//@Begin_vertex
#ifdef GL_ES
 precision mediump float;
#endif
uniform mat4 transformMatrix;
uniform mat4 projectionMatrix;

attribute vec4 position;
attribute vec2 texCoord;
varying vec2 textureCoordinate;

void main(void)
{
	textureCoordinate = texCoord;
	gl_Position = projectionMatrix * transformMatrix * position;
}
//@End
//@Begin_fragment
#ifdef GL_ES
 precision mediump float;
#endif
varying vec2 textureCoordinate;

uniform float Rx;
uniform float Ry;
uniform float Gx;
uniform float Gy;
uniform float Bx;
uniform float By;
uniform float Ax;
uniform float Ay;

uniform sampler2D imgTexture;
uniform lowp vec4 blendColor;

vec4 texClip(sampler2D img, vec2 pos)
{
	return (pos.x < 0.0 || pos.y < 0.0 || pos.x > 1.0 || pos.y > 1.0) ? vec4(0.0) : texture2D(img,pos);
}

void main(void)
{
	vec4 color = texture2D(imgTexture, textureCoordinate);

	color.r = texClip(imgTexture, textureCoordinate+vec2(Rx,Ry)).r;
	color.g = texClip(imgTexture, textureCoordinate+vec2(Gx,Gy)).g;
	color.b = texClip(imgTexture, textureCoordinate+vec2(Bx,By)).b;
	color.a = texClip(imgTexture, textureCoordinate+vec2(Ax,Ay)).a;

	color *= blendColor;

	gl_FragColor = color;
}
//@End
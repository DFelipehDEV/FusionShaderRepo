// CS_Flag

//@Begin_vertex
#ifdef GL_ES
 precision mediump float;
#endif
uniform mat4 transformMatrix;
uniform mat4 projectionMatrix;

attribute vec4 position;
attribute vec2 texCoord;
varying vec2 textureCoordinate;

void main(void)
{
	textureCoordinate = texCoord;
	gl_Position = projectionMatrix * transformMatrix * position;
}
//@End
//@Begin_fragment
#ifdef GL_ES
 precision mediump float;
#endif
varying vec2 textureCoordinate;

uniform float fAmplitude;
uniform float fPeriods;
uniform float fFreq;
uniform float fLight;


uniform sampler2D imgTexture;
uniform lowp vec4 blendColor;

void main(void)
{
	float fY = textureCoordinate.y;
	float fShadow;
	vec2 tmpCoord = textureCoordinate;

	tmpCoord.y = tmpCoord.y + (sin((tmpCoord.x+fFreq)*fPeriods)*fAmplitude);

	fShadow = (tmpCoord.y-fY)*100.0*fLight*fAmplitude;

	vec4 color = texture2D(imgTexture, textureCoordinate);
	color.rgb = color.rgb+fShadow;

	color *= blendColor;

	gl_FragColor = color;
}
//@End
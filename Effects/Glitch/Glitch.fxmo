// Glitch

//@Begin_vertex
//version_####
#ifdef GL_ES
 precision mediump float;
#endif
in vec2 position;

uniform mat3 projectionMatrix;
uniform mat3 transformMatrix;
uniform mat3 objectMatrix;
uniform mat3 textureMatrix;

out vec2 textureCoordinate;

void main()
{
    vec3 pos = vec3(position, 1.0);
    textureCoordinate = (textureMatrix * pos).xy;
    gl_Position = vec4(projectionMatrix * transformMatrix * objectMatrix * pos, 1.0);
}
//@End
//@Begin_fragment
//version_####
#ifdef GL_ES
 precision mediump float;
#endif
in vec2 textureCoordinate;

uniform sampler2D imgTexture;
uniform sampler2D dist_map;

uniform float fPow;
uniform float fBleed;

uniform vec4 blendColor;
uniform float fPixelWidth;
uniform float fPixelHeight;

out vec4 fragColor;

void main(void)
{
    float distortion = (texture(dist_map, vec2(textureCoordinate.x, textureCoordinate.y)).r * 2.0 - 1.0)/fPow;
    float distortion2 = texture(imgTexture, vec2(textureCoordinate.x, textureCoordinate.y)).g / fBleed;

    vec4 distorted = texture(imgTexture, vec2(textureCoordinate.x + distortion, textureCoordinate.y)) * 8.0;

    vec4 PXT = texture(imgTexture, vec2(textureCoordinate.x, textureCoordinate.y - distortion2));
    vec4 PXTL = texture(imgTexture, vec2(textureCoordinate.x - distortion2, textureCoordinate.y - distortion2));
    vec4 PXL = texture(imgTexture, vec2(textureCoordinate.x - distortion2, textureCoordinate.y));
    vec4 PXBL = texture(imgTexture, vec2(textureCoordinate.x - distortion2, textureCoordinate.y + distortion2));
    vec4 PXB = texture(imgTexture, vec2(textureCoordinate.x, textureCoordinate.y + distortion2));
    vec4 PXBR = texture(imgTexture, vec2(textureCoordinate.x + distortion2, textureCoordinate.y + distortion2));
    vec4 PXR = texture(imgTexture, vec2(textureCoordinate.x + distortion2, textureCoordinate.y));
    vec4 PXTR = texture(imgTexture, vec2(textureCoordinate.x + distortion2, textureCoordinate.y - distortion2));


    vec4 color = (distorted + PXT + PXTL + PXL + PXBL + PXB + PXBR + PXR + PXTR) / 9.0;

    color *= blendColor;
    fragColor = color; //fragColor = color;
}
//@End
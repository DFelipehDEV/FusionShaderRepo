// PT_Rotate

//@Begin_vertex
#ifdef GL_ES
 precision mediump float;
#endif
uniform mat4 transformMatrix;
uniform mat4 projectionMatrix;

attribute vec4 position;
attribute vec2 texCoord;
varying vec2 textureCoordinate;

void main(void)
{
	textureCoordinate = texCoord;
	gl_Position = projectionMatrix * transformMatrix * position;
}
//@End
//@Begin_fragment
#ifdef GL_ES
 precision mediump float;
#endif
varying vec2 textureCoordinate;

uniform float fAngle;

uniform sampler2D imgTexture;
uniform lowp vec4 blendColor;

void main(void)
{
	vec2 tmpTex = textureCoordinate;
	float Angle = radians(fAngle);
	tmpTex.x -= 0.5;
	tmpTex.y -= 0.5;

	float Tcos = cos(Angle);
	float Tsin = sin(Angle);
	float Temp = tmpTex.x * Tcos - tmpTex.y * Tsin + 0.5;
	tmpTex.y = tmpTex.y * Tcos + tmpTex.x * Tsin + 0.5;
	tmpTex.x = Temp;
   	vec4 color = texture2D(imgTexture, tmpTex);

	color *= blendColor;

	gl_FragColor = color;
}
//@End